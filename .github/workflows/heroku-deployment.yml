name: Graph TDD

on:
  push:
    branches: [ '**' ]  # Triggers on push to any branch
  pull_request:
    branches: [ '**' ]  # Triggers on pull requests to any branch

permissions:
  contents: write
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2  # Correct the version tag for the checkout action

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # Specify the Python version

      - name: Install Pipenv
        run: pip install pipenv  # Install Pipenv without a preceding comment

      - name: Install dependencies with pipenv
        run: pipenv install --dev  # Install dependencies from Pipfile

      - name: Run Tests with coverage
        run: |
           pipenv run python3 -m pytest --verbose --cov=. --cov-report=xml --junitxml=junit.xml

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure()  # Publish the test report regardless of the test result
        with:
          report_paths: '**/junit.xml'
          detailed_summary: true
          include_passed: true

      # Step 5: Deploy to Heroku
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku git:remote -a build-graph-with-tdd
          git push heroku main

